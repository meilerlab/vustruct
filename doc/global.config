[Genome_PDB_Mapper]

# For historical reasons, the parent directory of all cases must be
# specified as the parent'sparent, then the parent component.
# Restated, when these two values are catenated, they will 
# reference your parent directory.
# output_rootdir must start and end with a slash, as absolute pathname
# collaboration cannot contain slashes.  A short word/letters recommended
#      (UDN, cases, etc - all acceptable)
output_rootdir = /home/perhaps/
collaboration = UDN

# These 4 settings should not be changed, unless directed by Chris Moth
# It is a goal that we support alternate servers, but the load-process is 
# rather complex at the moment.
dbhost = vgi01.accre.vanderbilt.edu
dbname = pdbmap_v14
dbuser = psb_access
dbpass = psb-access

# This setting is inactive at the moment.  Newly created files will inherit your environment's umask
# Later, this setting will instruct the pipeline to create files so that others in the specified group
# can write files that you create.  
chgrp_to = your_group

# Designate a directory, ideally accessible to all in your group who might use the pipeline,
# where ddg calculations results are stored.  Place the ddg_repo.config file there.
#
ddg_config=/dors/capra_lab/projects/ddg_repo/ddg_repo.config

# For convenience, set data_root for re-use throughout this config file
# data_root is not used by the pipeline, but fills in other varianbles below
# which are used by the pipeline
data_root=/dors/capra_lab/data

# Gnomad 2.1.1 exomes is a huge dataset.  The pipeline reads the .vcf files directly
# files using tabix and VEP
# Applications concat the gnomad_dir and gnomand_filename, 
# and replace % with chromosome # or X or Y
gnomad_dir=%(data_root)s/gnomad/2.1.1/liftover_grch38/vcf/exomes/exomes 
gnomad_filename_template=gnomad.exomes.r2.1.1.sites.%%s.liftover_grch38.vcf.bgz

# All structures in the .pdb
# See population script data/pdb/DOWNLOAD_pdb in the same directory
pdb_dir = %(data_root)s/pdb/

# Swiss model
# See data/swissmodel/DOWNLOAD_swissprot 
swiss_dir = %(data_root)s/swissmodel/current/SWISS-MODEL_Repository/
swiss_summary = %(data_root)s/swissmodel/current/SWISS-MODEL_Repository/INDEX.json

# Modbase
modbase2020_dir = %(data_root)s/modbase/current/model
modbase2020_summary = %(data_root)s/modbase/current/Homo_sapiens_2020.summary.txt
idmapping=%(data_root)s/uniprot/current/HUMAN_9606_idmapping_sprot.dat.gz
interpro_dir=%(data_root)s/interpro/current
# idmapping = %(data_root)s/uniprot/idmapping/HUMAN_9606_idmapping_sprot.dat.gz
sec2prim = %(data_root)s/uniprot/current/uniprot_sec2prim_ac.txt
sprot = %(data_root)s/uniprot/current/uniprot_sprot_human.dat

# SIFTS alignment XML files 
sifts = %(data_root)s/sifts/current/xml

# The Ensembl Varient Effector binaries and human cache file are located
# in the Singularity container
vep = /ensembl/ensembl-vep/vep
vep_cache_dir = /vep_cache
vep_assembly = GRCh38

# Old parameters not in use
# pfam = pfam/pdb_pfam_mapping.txt
# create_new_db = False
# dssp_exe = /dors/capra_lab/projects/psb_collab/psb_pipeline%(data_root)s/dssp/dssp_local.exe

# Chimera graphics software is located in the singularity container
chimera_headless = /chimera_headless/bin/chimera

[PathProx]
# Default pathprox options for neutral and disease variants
# Custom variants may be specified with ..._variant_filename options
# Overrides should be placed in case-specific, pr perhaps user-specific
# .config files
# These settings below integrate gnomad exome variants.  The pathprox
# software is hardcoded to include only variants with MAF > 10E-5
# (1 in 10,0000)
neutral_variant_sql_label=gnomad38
neutral_variant_short_description=gnomAD38
# neutral_variant_sqlLabel=exac
# neutral_variant_short_description=EXAC
disease1_variant_sql_label=clinvar38
disease1_variant_short_description=Clinvar38
disease2_variant_sql_label=cosmic38
disease2_variant_short_description=COSMIC38


[SlurmParametersAll]
# You must configure slurm parameters to match your cluster, your cluster account, etc
# Be sure to visit the user-specific config file to set individual email addresses
# for notifications
account = capra_lab_csb
ntasks = 1

[SlurmParametersPathProx]
time = 1-0
mem = 30GB

[SlurmParametersDDGMonomer]
# 4 days is an outside maximum runtime for ddg monomer calculations
# in our experience.  Some may take longer - but those tend to take
# a _lot_ longer to the point of uselessness.
time = 4-00:00:00
mem = 10GB

[SlurmParametersUDNSequence]
# These parameters are for supplemental sequence analysis software
# which is not integrated into the container version
time = 12:00:00
mem = 10GB

[SlurmParametersUDNStructure]
# These parameters are for supplemental structural analysis software
# which is not integrated into the container version
time = 96:00:00
mem = 10GB

[SlurmParametersDigenicAnalysis]
# Run casewide, psb_genedicts.py is not very demanding of resources
# This application only works from UDN data sources where matrices of
# genes are considered.
time = 0-1
mem = 30GB


[SlurmParametersReport]
# These are used when the psb_rep.py program is called with --slurm to make a .slurm run
# to simultaneously run all the reports  Usually only done for BIG mutation sets.
time = 1:00:00
mem = 3GB
